# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic as pydantic

from ....core.datetime_utils import serialize_datetime


class GetV2ObjectsObjectRecordsRecordIdEntriesResponseDataItem(pydantic.BaseModel):
    list_id: str = pydantic.Field(description="A UUID identifying the list that this record is in.")
    list_api_slug: str = pydantic.Field(description="A human-readable slug for the list for use in URLs and responses.")
    entry_id: str = pydantic.Field(description="A UUID identifying this entry on the list.")
    created_at: str = pydantic.Field(description="When this entry was created.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
