# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic.v1 as pydantic

from ....core.datetime_utils import serialize_datetime
from .post_v_2_lists_request_data_workspace_access import PostV2ListsRequestDataWorkspaceAccess
from .post_v_2_lists_request_data_workspace_member_access_item import PostV2ListsRequestDataWorkspaceMemberAccessItem


class PostV2ListsRequestData(pydantic.BaseModel):
    name: str = pydantic.Field(description="The human-readable name of the list.")
    api_slug: str = pydantic.Field(
        description="A unique, human-readable slug to access the list through API calls. Should be formatted in snake case."
    )
    parent_object: str = pydantic.Field(
        description="A UUID or slug to identify the allowed object type for records added to this list."
    )
    workspace_access: typing.Optional[PostV2ListsRequestDataWorkspaceAccess] = pydantic.Field(
        description="The level of access granted to all members of the workspace for this list. Pass `null` to keep the list private and only grant access to specific workspace members."
    )
    workspace_member_access: typing.List[PostV2ListsRequestDataWorkspaceMemberAccessItem] = pydantic.Field(
        description="The level of access granted to specific workspace members for this list. Pass an empty array to grant access to no workspace members."
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
