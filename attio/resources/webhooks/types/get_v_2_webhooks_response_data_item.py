# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic as pydantic

from ....core.datetime_utils import serialize_datetime
from .get_v_2_webhooks_response_data_item_id import GetV2WebhooksResponseDataItemId
from .get_v_2_webhooks_response_data_item_status import GetV2WebhooksResponseDataItemStatus
from .get_v_2_webhooks_response_data_item_subscriptions_item import GetV2WebhooksResponseDataItemSubscriptionsItem


class GetV2WebhooksResponseDataItem(pydantic.BaseModel):
    target_url: str = pydantic.Field(description="URL where the webhook events will be delivered to.")
    subscriptions: typing.List[GetV2WebhooksResponseDataItemSubscriptionsItem] = pydantic.Field(
        description="One or more events the webhook is subscribed to."
    )
    id: GetV2WebhooksResponseDataItemId
    status: GetV2WebhooksResponseDataItemStatus = pydantic.Field(
        description="The state of the webhook. Webhooks marked as active and degraded will receive events, inactive ones will not. If a webhook remains in the degraded state for 7 days, it will be marked inactive."
    )
    created_at: str = pydantic.Field(description="When the webhook was created.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        
        json_encoders = {dt.datetime: serialize_datetime}
