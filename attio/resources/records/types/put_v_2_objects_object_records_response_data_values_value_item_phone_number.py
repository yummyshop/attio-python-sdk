# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic as pydantic

from ....core.datetime_utils import serialize_datetime
from .put_v_2_objects_object_records_response_data_values_value_item_phone_number_country_code import (
    PutV2ObjectsObjectRecordsResponseDataValuesValueItemPhoneNumberCountryCode,
)
from .put_v_2_objects_object_records_response_data_values_value_item_phone_number_created_by_actor import (
    PutV2ObjectsObjectRecordsResponseDataValuesValueItemPhoneNumberCreatedByActor,
)


class PutV2ObjectsObjectRecordsResponseDataValuesValueItemPhoneNumber(pydantic.BaseModel):
    active_from: dt.datetime = pydantic.Field(
        description='The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.'
    )
    active_until: typing.Optional[dt.datetime] = pydantic.Field(
        description="The point in time at which this value was deactivated. If `null`, the value is active."
    )
    created_by_actor: PutV2ObjectsObjectRecordsResponseDataValuesValueItemPhoneNumberCreatedByActor = pydantic.Field(
        description="The actor that created this value."
    )
    original_phone_number: str = pydantic.Field(description="The raw, original phone number, as inputted.")
    country_code: PutV2ObjectsObjectRecordsResponseDataValuesValueItemPhoneNumberCountryCode = pydantic.Field(
        description="The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to."
    )
    phone_number: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        
        json_encoders = {dt.datetime: serialize_datetime}
