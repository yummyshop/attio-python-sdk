# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class InputValueLatitudeCountryCode(str, enum.Enum):
    """
    The ISO 3166-1 alpha-2 country code for the country this location is in.
    """

    AF = "AF"
    AX = "AX"
    AL = "AL"
    DZ = "DZ"
    AS = "AS"
    AD = "AD"
    AO = "AO"
    AI = "AI"
    AQ = "AQ"
    AG = "AG"
    AR = "AR"
    AM = "AM"
    AW = "AW"
    AU = "AU"
    AT = "AT"
    AZ = "AZ"
    BS = "BS"
    BH = "BH"
    BD = "BD"
    BB = "BB"
    BY = "BY"
    BE = "BE"
    BZ = "BZ"
    BJ = "BJ"
    BM = "BM"
    BT = "BT"
    BO = "BO"
    BA = "BA"
    BW = "BW"
    BV = "BV"
    BR = "BR"
    IO = "IO"
    BN = "BN"
    BG = "BG"
    BF = "BF"
    BI = "BI"
    KH = "KH"
    CM = "CM"
    CA = "CA"
    CV = "CV"
    KY = "KY"
    CF = "CF"
    TD = "TD"
    CL = "CL"
    CN = "CN"
    CX = "CX"
    CC = "CC"
    CO = "CO"
    KM = "KM"
    CG = "CG"
    CD = "CD"
    CK = "CK"
    CR = "CR"
    CI = "CI"
    HR = "HR"
    CU = "CU"
    CY = "CY"
    CZ = "CZ"
    DK = "DK"
    DJ = "DJ"
    DM = "DM"
    DO = "DO"
    EC = "EC"
    EG = "EG"
    SV = "SV"
    GQ = "GQ"
    ER = "ER"
    EE = "EE"
    ET = "ET"
    FK = "FK"
    FO = "FO"
    FJ = "FJ"
    FI = "FI"
    FR = "FR"
    GF = "GF"
    PF = "PF"
    TF = "TF"
    GA = "GA"
    GM = "GM"
    GE = "GE"
    DE = "DE"
    GH = "GH"
    GI = "GI"
    GR = "GR"
    GL = "GL"
    GD = "GD"
    GP = "GP"
    GU = "GU"
    GT = "GT"
    GG = "GG"
    GN = "GN"
    GW = "GW"
    GY = "GY"
    HT = "HT"
    HM = "HM"
    VA = "VA"
    HN = "HN"
    HK = "HK"
    HU = "HU"
    IS = "IS"
    IN = "IN"
    ID = "ID"
    IR = "IR"
    IQ = "IQ"
    IE = "IE"
    IM = "IM"
    IL = "IL"
    IT = "IT"
    JM = "JM"
    JP = "JP"
    JE = "JE"
    JO = "JO"
    KZ = "KZ"
    KE = "KE"
    KI = "KI"
    KR = "KR"
    KW = "KW"
    KG = "KG"
    LA = "LA"
    LV = "LV"
    LB = "LB"
    LS = "LS"
    LR = "LR"
    LY = "LY"
    LI = "LI"
    LT = "LT"
    LU = "LU"
    MO = "MO"
    MK = "MK"
    MG = "MG"
    MW = "MW"
    MY = "MY"
    MV = "MV"
    ML = "ML"
    MT = "MT"
    MH = "MH"
    MQ = "MQ"
    MR = "MR"
    MU = "MU"
    YT = "YT"
    MX = "MX"
    FM = "FM"
    MD = "MD"
    MC = "MC"
    MN = "MN"
    ME = "ME"
    MS = "MS"
    MA = "MA"
    MZ = "MZ"
    MM = "MM"
    NA = "NA"
    NR = "NR"
    NP = "NP"
    NL = "NL"
    AN = "AN"
    NC = "NC"
    NZ = "NZ"
    NI = "NI"
    NE = "NE"
    NG = "NG"
    NU = "NU"
    NF = "NF"
    MP = "MP"
    NO = "NO"
    OM = "OM"
    PK = "PK"
    PW = "PW"
    PS = "PS"
    PA = "PA"
    PG = "PG"
    PY = "PY"
    PE = "PE"
    PH = "PH"
    PN = "PN"
    PL = "PL"
    PT = "PT"
    PR = "PR"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RU = "RU"
    RW = "RW"
    BL = "BL"
    SH = "SH"
    KN = "KN"
    LC = "LC"
    MF = "MF"
    PM = "PM"
    VC = "VC"
    WS = "WS"
    SM = "SM"
    ST = "ST"
    SA = "SA"
    SN = "SN"
    RS = "RS"
    SC = "SC"
    SL = "SL"
    SG = "SG"
    SK = "SK"
    SI = "SI"
    SB = "SB"
    SO = "SO"
    ZA = "ZA"
    GS = "GS"
    ES = "ES"
    LK = "LK"
    SD = "SD"
    SR = "SR"
    SJ = "SJ"
    SZ = "SZ"
    SE = "SE"
    CH = "CH"
    SY = "SY"
    TW = "TW"
    TJ = "TJ"
    TZ = "TZ"
    TH = "TH"
    TL = "TL"
    TG = "TG"
    TK = "TK"
    TO = "TO"
    TT = "TT"
    TN = "TN"
    TR = "TR"
    TM = "TM"
    TC = "TC"
    TV = "TV"
    UG = "UG"
    UA = "UA"
    AE = "AE"
    GB = "GB"
    US = "US"
    UM = "UM"
    UY = "UY"
    UZ = "UZ"
    VU = "VU"
    VE = "VE"
    VN = "VN"
    VG = "VG"
    VI = "VI"
    WF = "WF"
    EH = "EH"
    YE = "YE"
    ZM = "ZM"
    ZW = "ZW"

    def visit(
        self,
        af: typing.Callable[[], T_Result],
        ax: typing.Callable[[], T_Result],
        al: typing.Callable[[], T_Result],
        dz: typing.Callable[[], T_Result],
        as_: typing.Callable[[], T_Result],
        ad: typing.Callable[[], T_Result],
        ao: typing.Callable[[], T_Result],
        ai: typing.Callable[[], T_Result],
        aq: typing.Callable[[], T_Result],
        ag: typing.Callable[[], T_Result],
        ar: typing.Callable[[], T_Result],
        am: typing.Callable[[], T_Result],
        aw: typing.Callable[[], T_Result],
        au: typing.Callable[[], T_Result],
        at: typing.Callable[[], T_Result],
        az: typing.Callable[[], T_Result],
        bs: typing.Callable[[], T_Result],
        bh: typing.Callable[[], T_Result],
        bd: typing.Callable[[], T_Result],
        bb: typing.Callable[[], T_Result],
        by: typing.Callable[[], T_Result],
        be: typing.Callable[[], T_Result],
        bz: typing.Callable[[], T_Result],
        bj: typing.Callable[[], T_Result],
        bm: typing.Callable[[], T_Result],
        bt: typing.Callable[[], T_Result],
        bo: typing.Callable[[], T_Result],
        ba: typing.Callable[[], T_Result],
        bw: typing.Callable[[], T_Result],
        bv: typing.Callable[[], T_Result],
        br: typing.Callable[[], T_Result],
        io: typing.Callable[[], T_Result],
        bn: typing.Callable[[], T_Result],
        bg: typing.Callable[[], T_Result],
        bf: typing.Callable[[], T_Result],
        bi: typing.Callable[[], T_Result],
        kh: typing.Callable[[], T_Result],
        cm: typing.Callable[[], T_Result],
        ca: typing.Callable[[], T_Result],
        cv: typing.Callable[[], T_Result],
        ky: typing.Callable[[], T_Result],
        cf: typing.Callable[[], T_Result],
        td: typing.Callable[[], T_Result],
        cl: typing.Callable[[], T_Result],
        cn: typing.Callable[[], T_Result],
        cx: typing.Callable[[], T_Result],
        cc: typing.Callable[[], T_Result],
        co: typing.Callable[[], T_Result],
        km: typing.Callable[[], T_Result],
        cg: typing.Callable[[], T_Result],
        cd: typing.Callable[[], T_Result],
        ck: typing.Callable[[], T_Result],
        cr: typing.Callable[[], T_Result],
        ci: typing.Callable[[], T_Result],
        hr: typing.Callable[[], T_Result],
        cu: typing.Callable[[], T_Result],
        cy: typing.Callable[[], T_Result],
        cz: typing.Callable[[], T_Result],
        dk: typing.Callable[[], T_Result],
        dj: typing.Callable[[], T_Result],
        dm: typing.Callable[[], T_Result],
        do: typing.Callable[[], T_Result],
        ec: typing.Callable[[], T_Result],
        eg: typing.Callable[[], T_Result],
        sv: typing.Callable[[], T_Result],
        gq: typing.Callable[[], T_Result],
        er: typing.Callable[[], T_Result],
        ee: typing.Callable[[], T_Result],
        et: typing.Callable[[], T_Result],
        fk: typing.Callable[[], T_Result],
        fo: typing.Callable[[], T_Result],
        fj: typing.Callable[[], T_Result],
        fi: typing.Callable[[], T_Result],
        fr: typing.Callable[[], T_Result],
        gf: typing.Callable[[], T_Result],
        pf: typing.Callable[[], T_Result],
        tf: typing.Callable[[], T_Result],
        ga: typing.Callable[[], T_Result],
        gm: typing.Callable[[], T_Result],
        ge: typing.Callable[[], T_Result],
        de: typing.Callable[[], T_Result],
        gh: typing.Callable[[], T_Result],
        gi: typing.Callable[[], T_Result],
        gr: typing.Callable[[], T_Result],
        gl: typing.Callable[[], T_Result],
        gd: typing.Callable[[], T_Result],
        gp: typing.Callable[[], T_Result],
        gu: typing.Callable[[], T_Result],
        gt: typing.Callable[[], T_Result],
        gg: typing.Callable[[], T_Result],
        gn: typing.Callable[[], T_Result],
        gw: typing.Callable[[], T_Result],
        gy: typing.Callable[[], T_Result],
        ht: typing.Callable[[], T_Result],
        hm: typing.Callable[[], T_Result],
        va: typing.Callable[[], T_Result],
        hn: typing.Callable[[], T_Result],
        hk: typing.Callable[[], T_Result],
        hu: typing.Callable[[], T_Result],
        is_: typing.Callable[[], T_Result],
        in_: typing.Callable[[], T_Result],
        id: typing.Callable[[], T_Result],
        ir: typing.Callable[[], T_Result],
        iq: typing.Callable[[], T_Result],
        ie: typing.Callable[[], T_Result],
        im: typing.Callable[[], T_Result],
        il: typing.Callable[[], T_Result],
        it: typing.Callable[[], T_Result],
        jm: typing.Callable[[], T_Result],
        jp: typing.Callable[[], T_Result],
        je: typing.Callable[[], T_Result],
        jo: typing.Callable[[], T_Result],
        kz: typing.Callable[[], T_Result],
        ke: typing.Callable[[], T_Result],
        ki: typing.Callable[[], T_Result],
        kr: typing.Callable[[], T_Result],
        kw: typing.Callable[[], T_Result],
        kg: typing.Callable[[], T_Result],
        la: typing.Callable[[], T_Result],
        lv: typing.Callable[[], T_Result],
        lb: typing.Callable[[], T_Result],
        ls: typing.Callable[[], T_Result],
        lr: typing.Callable[[], T_Result],
        ly: typing.Callable[[], T_Result],
        li: typing.Callable[[], T_Result],
        lt: typing.Callable[[], T_Result],
        lu: typing.Callable[[], T_Result],
        mo: typing.Callable[[], T_Result],
        mk: typing.Callable[[], T_Result],
        mg: typing.Callable[[], T_Result],
        mw: typing.Callable[[], T_Result],
        my: typing.Callable[[], T_Result],
        mv: typing.Callable[[], T_Result],
        ml: typing.Callable[[], T_Result],
        mt: typing.Callable[[], T_Result],
        mh: typing.Callable[[], T_Result],
        mq: typing.Callable[[], T_Result],
        mr: typing.Callable[[], T_Result],
        mu: typing.Callable[[], T_Result],
        yt: typing.Callable[[], T_Result],
        mx: typing.Callable[[], T_Result],
        fm: typing.Callable[[], T_Result],
        md: typing.Callable[[], T_Result],
        mc: typing.Callable[[], T_Result],
        mn: typing.Callable[[], T_Result],
        me: typing.Callable[[], T_Result],
        ms: typing.Callable[[], T_Result],
        ma: typing.Callable[[], T_Result],
        mz: typing.Callable[[], T_Result],
        mm: typing.Callable[[], T_Result],
        na: typing.Callable[[], T_Result],
        nr: typing.Callable[[], T_Result],
        np: typing.Callable[[], T_Result],
        nl: typing.Callable[[], T_Result],
        an: typing.Callable[[], T_Result],
        nc: typing.Callable[[], T_Result],
        nz: typing.Callable[[], T_Result],
        ni: typing.Callable[[], T_Result],
        ne: typing.Callable[[], T_Result],
        ng: typing.Callable[[], T_Result],
        nu: typing.Callable[[], T_Result],
        nf: typing.Callable[[], T_Result],
        mp: typing.Callable[[], T_Result],
        no: typing.Callable[[], T_Result],
        om: typing.Callable[[], T_Result],
        pk: typing.Callable[[], T_Result],
        pw: typing.Callable[[], T_Result],
        ps: typing.Callable[[], T_Result],
        pa: typing.Callable[[], T_Result],
        pg: typing.Callable[[], T_Result],
        py: typing.Callable[[], T_Result],
        pe: typing.Callable[[], T_Result],
        ph: typing.Callable[[], T_Result],
        pn: typing.Callable[[], T_Result],
        pl: typing.Callable[[], T_Result],
        pt: typing.Callable[[], T_Result],
        pr: typing.Callable[[], T_Result],
        qa: typing.Callable[[], T_Result],
        re: typing.Callable[[], T_Result],
        ro: typing.Callable[[], T_Result],
        ru: typing.Callable[[], T_Result],
        rw: typing.Callable[[], T_Result],
        bl: typing.Callable[[], T_Result],
        sh: typing.Callable[[], T_Result],
        kn: typing.Callable[[], T_Result],
        lc: typing.Callable[[], T_Result],
        mf: typing.Callable[[], T_Result],
        pm: typing.Callable[[], T_Result],
        vc: typing.Callable[[], T_Result],
        ws: typing.Callable[[], T_Result],
        sm: typing.Callable[[], T_Result],
        st: typing.Callable[[], T_Result],
        sa: typing.Callable[[], T_Result],
        sn: typing.Callable[[], T_Result],
        rs: typing.Callable[[], T_Result],
        sc: typing.Callable[[], T_Result],
        sl: typing.Callable[[], T_Result],
        sg: typing.Callable[[], T_Result],
        sk: typing.Callable[[], T_Result],
        si: typing.Callable[[], T_Result],
        sb: typing.Callable[[], T_Result],
        so: typing.Callable[[], T_Result],
        za: typing.Callable[[], T_Result],
        gs: typing.Callable[[], T_Result],
        es: typing.Callable[[], T_Result],
        lk: typing.Callable[[], T_Result],
        sd: typing.Callable[[], T_Result],
        sr: typing.Callable[[], T_Result],
        sj: typing.Callable[[], T_Result],
        sz: typing.Callable[[], T_Result],
        se: typing.Callable[[], T_Result],
        ch: typing.Callable[[], T_Result],
        sy: typing.Callable[[], T_Result],
        tw: typing.Callable[[], T_Result],
        tj: typing.Callable[[], T_Result],
        tz: typing.Callable[[], T_Result],
        th: typing.Callable[[], T_Result],
        tl: typing.Callable[[], T_Result],
        tg: typing.Callable[[], T_Result],
        tk: typing.Callable[[], T_Result],
        to: typing.Callable[[], T_Result],
        tt: typing.Callable[[], T_Result],
        tn: typing.Callable[[], T_Result],
        tr: typing.Callable[[], T_Result],
        tm: typing.Callable[[], T_Result],
        tc: typing.Callable[[], T_Result],
        tv: typing.Callable[[], T_Result],
        ug: typing.Callable[[], T_Result],
        ua: typing.Callable[[], T_Result],
        ae: typing.Callable[[], T_Result],
        gb: typing.Callable[[], T_Result],
        us: typing.Callable[[], T_Result],
        um: typing.Callable[[], T_Result],
        uy: typing.Callable[[], T_Result],
        uz: typing.Callable[[], T_Result],
        vu: typing.Callable[[], T_Result],
        ve: typing.Callable[[], T_Result],
        vn: typing.Callable[[], T_Result],
        vg: typing.Callable[[], T_Result],
        vi: typing.Callable[[], T_Result],
        wf: typing.Callable[[], T_Result],
        eh: typing.Callable[[], T_Result],
        ye: typing.Callable[[], T_Result],
        zm: typing.Callable[[], T_Result],
        zw: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is InputValueLatitudeCountryCode.AF:
            return af()
        if self is InputValueLatitudeCountryCode.AX:
            return ax()
        if self is InputValueLatitudeCountryCode.AL:
            return al()
        if self is InputValueLatitudeCountryCode.DZ:
            return dz()
        if self is InputValueLatitudeCountryCode.AS:
            return as_()
        if self is InputValueLatitudeCountryCode.AD:
            return ad()
        if self is InputValueLatitudeCountryCode.AO:
            return ao()
        if self is InputValueLatitudeCountryCode.AI:
            return ai()
        if self is InputValueLatitudeCountryCode.AQ:
            return aq()
        if self is InputValueLatitudeCountryCode.AG:
            return ag()
        if self is InputValueLatitudeCountryCode.AR:
            return ar()
        if self is InputValueLatitudeCountryCode.AM:
            return am()
        if self is InputValueLatitudeCountryCode.AW:
            return aw()
        if self is InputValueLatitudeCountryCode.AU:
            return au()
        if self is InputValueLatitudeCountryCode.AT:
            return at()
        if self is InputValueLatitudeCountryCode.AZ:
            return az()
        if self is InputValueLatitudeCountryCode.BS:
            return bs()
        if self is InputValueLatitudeCountryCode.BH:
            return bh()
        if self is InputValueLatitudeCountryCode.BD:
            return bd()
        if self is InputValueLatitudeCountryCode.BB:
            return bb()
        if self is InputValueLatitudeCountryCode.BY:
            return by()
        if self is InputValueLatitudeCountryCode.BE:
            return be()
        if self is InputValueLatitudeCountryCode.BZ:
            return bz()
        if self is InputValueLatitudeCountryCode.BJ:
            return bj()
        if self is InputValueLatitudeCountryCode.BM:
            return bm()
        if self is InputValueLatitudeCountryCode.BT:
            return bt()
        if self is InputValueLatitudeCountryCode.BO:
            return bo()
        if self is InputValueLatitudeCountryCode.BA:
            return ba()
        if self is InputValueLatitudeCountryCode.BW:
            return bw()
        if self is InputValueLatitudeCountryCode.BV:
            return bv()
        if self is InputValueLatitudeCountryCode.BR:
            return br()
        if self is InputValueLatitudeCountryCode.IO:
            return io()
        if self is InputValueLatitudeCountryCode.BN:
            return bn()
        if self is InputValueLatitudeCountryCode.BG:
            return bg()
        if self is InputValueLatitudeCountryCode.BF:
            return bf()
        if self is InputValueLatitudeCountryCode.BI:
            return bi()
        if self is InputValueLatitudeCountryCode.KH:
            return kh()
        if self is InputValueLatitudeCountryCode.CM:
            return cm()
        if self is InputValueLatitudeCountryCode.CA:
            return ca()
        if self is InputValueLatitudeCountryCode.CV:
            return cv()
        if self is InputValueLatitudeCountryCode.KY:
            return ky()
        if self is InputValueLatitudeCountryCode.CF:
            return cf()
        if self is InputValueLatitudeCountryCode.TD:
            return td()
        if self is InputValueLatitudeCountryCode.CL:
            return cl()
        if self is InputValueLatitudeCountryCode.CN:
            return cn()
        if self is InputValueLatitudeCountryCode.CX:
            return cx()
        if self is InputValueLatitudeCountryCode.CC:
            return cc()
        if self is InputValueLatitudeCountryCode.CO:
            return co()
        if self is InputValueLatitudeCountryCode.KM:
            return km()
        if self is InputValueLatitudeCountryCode.CG:
            return cg()
        if self is InputValueLatitudeCountryCode.CD:
            return cd()
        if self is InputValueLatitudeCountryCode.CK:
            return ck()
        if self is InputValueLatitudeCountryCode.CR:
            return cr()
        if self is InputValueLatitudeCountryCode.CI:
            return ci()
        if self is InputValueLatitudeCountryCode.HR:
            return hr()
        if self is InputValueLatitudeCountryCode.CU:
            return cu()
        if self is InputValueLatitudeCountryCode.CY:
            return cy()
        if self is InputValueLatitudeCountryCode.CZ:
            return cz()
        if self is InputValueLatitudeCountryCode.DK:
            return dk()
        if self is InputValueLatitudeCountryCode.DJ:
            return dj()
        if self is InputValueLatitudeCountryCode.DM:
            return dm()
        if self is InputValueLatitudeCountryCode.DO:
            return do()
        if self is InputValueLatitudeCountryCode.EC:
            return ec()
        if self is InputValueLatitudeCountryCode.EG:
            return eg()
        if self is InputValueLatitudeCountryCode.SV:
            return sv()
        if self is InputValueLatitudeCountryCode.GQ:
            return gq()
        if self is InputValueLatitudeCountryCode.ER:
            return er()
        if self is InputValueLatitudeCountryCode.EE:
            return ee()
        if self is InputValueLatitudeCountryCode.ET:
            return et()
        if self is InputValueLatitudeCountryCode.FK:
            return fk()
        if self is InputValueLatitudeCountryCode.FO:
            return fo()
        if self is InputValueLatitudeCountryCode.FJ:
            return fj()
        if self is InputValueLatitudeCountryCode.FI:
            return fi()
        if self is InputValueLatitudeCountryCode.FR:
            return fr()
        if self is InputValueLatitudeCountryCode.GF:
            return gf()
        if self is InputValueLatitudeCountryCode.PF:
            return pf()
        if self is InputValueLatitudeCountryCode.TF:
            return tf()
        if self is InputValueLatitudeCountryCode.GA:
            return ga()
        if self is InputValueLatitudeCountryCode.GM:
            return gm()
        if self is InputValueLatitudeCountryCode.GE:
            return ge()
        if self is InputValueLatitudeCountryCode.DE:
            return de()
        if self is InputValueLatitudeCountryCode.GH:
            return gh()
        if self is InputValueLatitudeCountryCode.GI:
            return gi()
        if self is InputValueLatitudeCountryCode.GR:
            return gr()
        if self is InputValueLatitudeCountryCode.GL:
            return gl()
        if self is InputValueLatitudeCountryCode.GD:
            return gd()
        if self is InputValueLatitudeCountryCode.GP:
            return gp()
        if self is InputValueLatitudeCountryCode.GU:
            return gu()
        if self is InputValueLatitudeCountryCode.GT:
            return gt()
        if self is InputValueLatitudeCountryCode.GG:
            return gg()
        if self is InputValueLatitudeCountryCode.GN:
            return gn()
        if self is InputValueLatitudeCountryCode.GW:
            return gw()
        if self is InputValueLatitudeCountryCode.GY:
            return gy()
        if self is InputValueLatitudeCountryCode.HT:
            return ht()
        if self is InputValueLatitudeCountryCode.HM:
            return hm()
        if self is InputValueLatitudeCountryCode.VA:
            return va()
        if self is InputValueLatitudeCountryCode.HN:
            return hn()
        if self is InputValueLatitudeCountryCode.HK:
            return hk()
        if self is InputValueLatitudeCountryCode.HU:
            return hu()
        if self is InputValueLatitudeCountryCode.IS:
            return is_()
        if self is InputValueLatitudeCountryCode.IN:
            return in_()
        if self is InputValueLatitudeCountryCode.ID:
            return id()
        if self is InputValueLatitudeCountryCode.IR:
            return ir()
        if self is InputValueLatitudeCountryCode.IQ:
            return iq()
        if self is InputValueLatitudeCountryCode.IE:
            return ie()
        if self is InputValueLatitudeCountryCode.IM:
            return im()
        if self is InputValueLatitudeCountryCode.IL:
            return il()
        if self is InputValueLatitudeCountryCode.IT:
            return it()
        if self is InputValueLatitudeCountryCode.JM:
            return jm()
        if self is InputValueLatitudeCountryCode.JP:
            return jp()
        if self is InputValueLatitudeCountryCode.JE:
            return je()
        if self is InputValueLatitudeCountryCode.JO:
            return jo()
        if self is InputValueLatitudeCountryCode.KZ:
            return kz()
        if self is InputValueLatitudeCountryCode.KE:
            return ke()
        if self is InputValueLatitudeCountryCode.KI:
            return ki()
        if self is InputValueLatitudeCountryCode.KR:
            return kr()
        if self is InputValueLatitudeCountryCode.KW:
            return kw()
        if self is InputValueLatitudeCountryCode.KG:
            return kg()
        if self is InputValueLatitudeCountryCode.LA:
            return la()
        if self is InputValueLatitudeCountryCode.LV:
            return lv()
        if self is InputValueLatitudeCountryCode.LB:
            return lb()
        if self is InputValueLatitudeCountryCode.LS:
            return ls()
        if self is InputValueLatitudeCountryCode.LR:
            return lr()
        if self is InputValueLatitudeCountryCode.LY:
            return ly()
        if self is InputValueLatitudeCountryCode.LI:
            return li()
        if self is InputValueLatitudeCountryCode.LT:
            return lt()
        if self is InputValueLatitudeCountryCode.LU:
            return lu()
        if self is InputValueLatitudeCountryCode.MO:
            return mo()
        if self is InputValueLatitudeCountryCode.MK:
            return mk()
        if self is InputValueLatitudeCountryCode.MG:
            return mg()
        if self is InputValueLatitudeCountryCode.MW:
            return mw()
        if self is InputValueLatitudeCountryCode.MY:
            return my()
        if self is InputValueLatitudeCountryCode.MV:
            return mv()
        if self is InputValueLatitudeCountryCode.ML:
            return ml()
        if self is InputValueLatitudeCountryCode.MT:
            return mt()
        if self is InputValueLatitudeCountryCode.MH:
            return mh()
        if self is InputValueLatitudeCountryCode.MQ:
            return mq()
        if self is InputValueLatitudeCountryCode.MR:
            return mr()
        if self is InputValueLatitudeCountryCode.MU:
            return mu()
        if self is InputValueLatitudeCountryCode.YT:
            return yt()
        if self is InputValueLatitudeCountryCode.MX:
            return mx()
        if self is InputValueLatitudeCountryCode.FM:
            return fm()
        if self is InputValueLatitudeCountryCode.MD:
            return md()
        if self is InputValueLatitudeCountryCode.MC:
            return mc()
        if self is InputValueLatitudeCountryCode.MN:
            return mn()
        if self is InputValueLatitudeCountryCode.ME:
            return me()
        if self is InputValueLatitudeCountryCode.MS:
            return ms()
        if self is InputValueLatitudeCountryCode.MA:
            return ma()
        if self is InputValueLatitudeCountryCode.MZ:
            return mz()
        if self is InputValueLatitudeCountryCode.MM:
            return mm()
        if self is InputValueLatitudeCountryCode.NA:
            return na()
        if self is InputValueLatitudeCountryCode.NR:
            return nr()
        if self is InputValueLatitudeCountryCode.NP:
            return np()
        if self is InputValueLatitudeCountryCode.NL:
            return nl()
        if self is InputValueLatitudeCountryCode.AN:
            return an()
        if self is InputValueLatitudeCountryCode.NC:
            return nc()
        if self is InputValueLatitudeCountryCode.NZ:
            return nz()
        if self is InputValueLatitudeCountryCode.NI:
            return ni()
        if self is InputValueLatitudeCountryCode.NE:
            return ne()
        if self is InputValueLatitudeCountryCode.NG:
            return ng()
        if self is InputValueLatitudeCountryCode.NU:
            return nu()
        if self is InputValueLatitudeCountryCode.NF:
            return nf()
        if self is InputValueLatitudeCountryCode.MP:
            return mp()
        if self is InputValueLatitudeCountryCode.NO:
            return no()
        if self is InputValueLatitudeCountryCode.OM:
            return om()
        if self is InputValueLatitudeCountryCode.PK:
            return pk()
        if self is InputValueLatitudeCountryCode.PW:
            return pw()
        if self is InputValueLatitudeCountryCode.PS:
            return ps()
        if self is InputValueLatitudeCountryCode.PA:
            return pa()
        if self is InputValueLatitudeCountryCode.PG:
            return pg()
        if self is InputValueLatitudeCountryCode.PY:
            return py()
        if self is InputValueLatitudeCountryCode.PE:
            return pe()
        if self is InputValueLatitudeCountryCode.PH:
            return ph()
        if self is InputValueLatitudeCountryCode.PN:
            return pn()
        if self is InputValueLatitudeCountryCode.PL:
            return pl()
        if self is InputValueLatitudeCountryCode.PT:
            return pt()
        if self is InputValueLatitudeCountryCode.PR:
            return pr()
        if self is InputValueLatitudeCountryCode.QA:
            return qa()
        if self is InputValueLatitudeCountryCode.RE:
            return re()
        if self is InputValueLatitudeCountryCode.RO:
            return ro()
        if self is InputValueLatitudeCountryCode.RU:
            return ru()
        if self is InputValueLatitudeCountryCode.RW:
            return rw()
        if self is InputValueLatitudeCountryCode.BL:
            return bl()
        if self is InputValueLatitudeCountryCode.SH:
            return sh()
        if self is InputValueLatitudeCountryCode.KN:
            return kn()
        if self is InputValueLatitudeCountryCode.LC:
            return lc()
        if self is InputValueLatitudeCountryCode.MF:
            return mf()
        if self is InputValueLatitudeCountryCode.PM:
            return pm()
        if self is InputValueLatitudeCountryCode.VC:
            return vc()
        if self is InputValueLatitudeCountryCode.WS:
            return ws()
        if self is InputValueLatitudeCountryCode.SM:
            return sm()
        if self is InputValueLatitudeCountryCode.ST:
            return st()
        if self is InputValueLatitudeCountryCode.SA:
            return sa()
        if self is InputValueLatitudeCountryCode.SN:
            return sn()
        if self is InputValueLatitudeCountryCode.RS:
            return rs()
        if self is InputValueLatitudeCountryCode.SC:
            return sc()
        if self is InputValueLatitudeCountryCode.SL:
            return sl()
        if self is InputValueLatitudeCountryCode.SG:
            return sg()
        if self is InputValueLatitudeCountryCode.SK:
            return sk()
        if self is InputValueLatitudeCountryCode.SI:
            return si()
        if self is InputValueLatitudeCountryCode.SB:
            return sb()
        if self is InputValueLatitudeCountryCode.SO:
            return so()
        if self is InputValueLatitudeCountryCode.ZA:
            return za()
        if self is InputValueLatitudeCountryCode.GS:
            return gs()
        if self is InputValueLatitudeCountryCode.ES:
            return es()
        if self is InputValueLatitudeCountryCode.LK:
            return lk()
        if self is InputValueLatitudeCountryCode.SD:
            return sd()
        if self is InputValueLatitudeCountryCode.SR:
            return sr()
        if self is InputValueLatitudeCountryCode.SJ:
            return sj()
        if self is InputValueLatitudeCountryCode.SZ:
            return sz()
        if self is InputValueLatitudeCountryCode.SE:
            return se()
        if self is InputValueLatitudeCountryCode.CH:
            return ch()
        if self is InputValueLatitudeCountryCode.SY:
            return sy()
        if self is InputValueLatitudeCountryCode.TW:
            return tw()
        if self is InputValueLatitudeCountryCode.TJ:
            return tj()
        if self is InputValueLatitudeCountryCode.TZ:
            return tz()
        if self is InputValueLatitudeCountryCode.TH:
            return th()
        if self is InputValueLatitudeCountryCode.TL:
            return tl()
        if self is InputValueLatitudeCountryCode.TG:
            return tg()
        if self is InputValueLatitudeCountryCode.TK:
            return tk()
        if self is InputValueLatitudeCountryCode.TO:
            return to()
        if self is InputValueLatitudeCountryCode.TT:
            return tt()
        if self is InputValueLatitudeCountryCode.TN:
            return tn()
        if self is InputValueLatitudeCountryCode.TR:
            return tr()
        if self is InputValueLatitudeCountryCode.TM:
            return tm()
        if self is InputValueLatitudeCountryCode.TC:
            return tc()
        if self is InputValueLatitudeCountryCode.TV:
            return tv()
        if self is InputValueLatitudeCountryCode.UG:
            return ug()
        if self is InputValueLatitudeCountryCode.UA:
            return ua()
        if self is InputValueLatitudeCountryCode.AE:
            return ae()
        if self is InputValueLatitudeCountryCode.GB:
            return gb()
        if self is InputValueLatitudeCountryCode.US:
            return us()
        if self is InputValueLatitudeCountryCode.UM:
            return um()
        if self is InputValueLatitudeCountryCode.UY:
            return uy()
        if self is InputValueLatitudeCountryCode.UZ:
            return uz()
        if self is InputValueLatitudeCountryCode.VU:
            return vu()
        if self is InputValueLatitudeCountryCode.VE:
            return ve()
        if self is InputValueLatitudeCountryCode.VN:
            return vn()
        if self is InputValueLatitudeCountryCode.VG:
            return vg()
        if self is InputValueLatitudeCountryCode.VI:
            return vi()
        if self is InputValueLatitudeCountryCode.WF:
            return wf()
        if self is InputValueLatitudeCountryCode.EH:
            return eh()
        if self is InputValueLatitudeCountryCode.YE:
            return ye()
        if self is InputValueLatitudeCountryCode.ZM:
            return zm()
        if self is InputValueLatitudeCountryCode.ZW:
            return zw()
