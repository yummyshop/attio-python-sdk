# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic as pydantic

from ....core.datetime_utils import serialize_datetime
from .post_v_2_target_identifier_attributes_request_data_config_currency_default_currency_code import (
    PostV2TargetIdentifierAttributesRequestDataConfigCurrencyDefaultCurrencyCode,
)
from .post_v_2_target_identifier_attributes_request_data_config_currency_display_type import (
    PostV2TargetIdentifierAttributesRequestDataConfigCurrencyDisplayType,
)


class PostV2TargetIdentifierAttributesRequestDataConfigCurrency(pydantic.BaseModel):
    """
    Configuration available for attributes of type "currency".
    """

    default_currency_code: PostV2TargetIdentifierAttributesRequestDataConfigCurrencyDefaultCurrencyCode = (
        pydantic.Field(
            description="The ISO4217 code representing the currency that values for this attribute should be stored in."
        )
    )
    display_type: PostV2TargetIdentifierAttributesRequestDataConfigCurrencyDisplayType = pydantic.Field(
        description='How the currency should be displayed across the app. "code" will display the ISO currency code e.g. "USD", "name" will display the localized currency name e.g. "British pound", "narrowSymbol" will display "$1" instead of "US$1" and "symbol" will display a localized currency symbol such as "$".'
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        
        json_encoders = {dt.datetime: serialize_datetime}
